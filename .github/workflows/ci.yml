name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    name: Backend Tests and Analysis
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Convertir en clone non-shallow pour les informations de "blame"
    - name: Convert to non-shallow clone
      run: git fetch --unshallow

    # Installer Java 17 pour SonarQube
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Cacher les modules Node.js pour accélérer le pipeline
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      working-directory: ./fiveMusics
      run: npm install

    - name: SonarQube Scan Backend
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        npx sonar-scanner \
          -Dsonar.projectKey="Pierre-Rayan-Shakir-Organization_API-SPRING-test" \
          -Dsonar.organization="pierre-rayan-shakir-organization" \
          -Dsonar.sources=./fiveMusics \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.exclusions="**/node_modules/**, **/*.test.js"

    # Charger les logs en cas d'erreur pour débogage
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: logs
        path: ./fiveMusics/logs
